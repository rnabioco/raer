// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_region
List get_region(std::string region);
RcppExport SEXP _raer_get_region(SEXP regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type region(regionSEXP);
    rcpp_result_gen = Rcpp::wrap(get_region(region));
    return rcpp_result_gen;
END_RCPP
}
// cread_tabix
List cread_tabix(std::string tbxpath, std::string region);
RcppExport SEXP _raer_cread_tabix(SEXP tbxpathSEXP, SEXP regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type tbxpath(tbxpathSEXP);
    Rcpp::traits::input_parameter< std::string >::type region(regionSEXP);
    rcpp_result_gen = Rcpp::wrap(cread_tabix(tbxpath, region));
    return rcpp_result_gen;
END_RCPP
}
// list_tabix_chroms
CharacterVector list_tabix_chroms(std::string tbxpath);
RcppExport SEXP _raer_list_tabix_chroms(SEXP tbxpathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type tbxpath(tbxpathSEXP);
    rcpp_result_gen = Rcpp::wrap(list_tabix_chroms(tbxpath));
    return rcpp_result_gen;
END_RCPP
}
// c_build_index
int c_build_index(std::string bampath, std::string idxpath, std::string tag);
RcppExport SEXP _raer_c_build_index(SEXP bampathSEXP, SEXP idxpathSEXP, SEXP tagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type bampath(bampathSEXP);
    Rcpp::traits::input_parameter< std::string >::type idxpath(idxpathSEXP);
    Rcpp::traits::input_parameter< std::string >::type tag(tagSEXP);
    rcpp_result_gen = Rcpp::wrap(c_build_index(bampath, idxpath, tag));
    return rcpp_result_gen;
END_RCPP
}
// fetch_cb_reads
int fetch_cb_reads(std::string bampath, std::string outpath, std::vector<std::string> cbs);
RcppExport SEXP _raer_fetch_cb_reads(SEXP bampathSEXP, SEXP outpathSEXP, SEXP cbsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type bampath(bampathSEXP);
    Rcpp::traits::input_parameter< std::string >::type outpath(outpathSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type cbs(cbsSEXP);
    rcpp_result_gen = Rcpp::wrap(fetch_cb_reads(bampath, outpath, cbs));
    return rcpp_result_gen;
END_RCPP
}
// c_show_index
DataFrame c_show_index(std::string bamfn, std::string idxfn);
RcppExport SEXP _raer_c_show_index(SEXP bamfnSEXP, SEXP idxfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< std::string >::type bamfn(bamfnSEXP);
    Rcpp::traits::input_parameter< std::string >::type idxfn(idxfnSEXP);
    rcpp_result_gen = Rcpp::wrap(c_show_index(bamfn, idxfn));
    return rcpp_result_gen;
END_RCPP
}
// cpp_fill_sparse_matrix
IntegerMatrix cpp_fill_sparse_matrix(const std::vector<std::vector<int> >& vals, const std::vector<std::vector<int> >& hits);
RcppExport SEXP _raer_cpp_fill_sparse_matrix(SEXP valsSEXP, SEXP hitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const std::vector<std::vector<int> >& >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::vector<int> >& >::type hits(hitsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_fill_sparse_matrix(vals, hits));
    return rcpp_result_gen;
END_RCPP
}
