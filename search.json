[{"path":"https://rnabioco.github.io/raer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 raer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rnabioco.github.io/raer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kent Riemondy. Author, maintainer. Kristen Wells. Author. Ryan Sheridan. Author. . Funder.","code":""},{"path":"https://rnabioco.github.io/raer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Riemondy K, Wells K, Sheridan R (2022). raer: RNA editing tools R. R package version 0.0.0.9000, http://github.com/rnabioco/raer.","code":"@Manual{,   title = {raer: RNA editing tools in R},   author = {Kent Riemondy and Kristen Wells and Ryan Sheridan},   year = {2022},   note = {R package version 0.0.0.9000},   url = {http://github.com/rnabioco/raer}, }"},{"path":"https://rnabioco.github.io/raer/index.html","id":"raer","dir":"","previous_headings":"","what":"RNA editing tools in R","title":"RNA editing tools in R","text":"goal raer …","code":""},{"path":"https://rnabioco.github.io/raer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"RNA editing tools in R","text":"can install development version raer GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"rnabioco/raer\")"},{"path":"https://rnabioco.github.io/raer/reference/BedFile-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A reference class for generating and storing index of BedFile — BedFile-class","title":"A reference class for generating and storing index of BedFile — BedFile-class","text":"Class store information bedfile used indicating regions pileup","code":""},{"path":"https://rnabioco.github.io/raer/reference/BedFile-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"A reference class for generating and storing index of BedFile — BedFile-class","text":".extptr externalptr c-level samtools bedindex path filepath bed file open logical indicating index open","code":""},{"path":"https://rnabioco.github.io/raer/reference/add_editing_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds editing frequencies — add_editing_frequencies","title":"Adds editing frequencies — add_editing_frequencies","text":"Adds editing frequencies existing SummarizedExperimentobject (created create_se). Currently editing supported well custom editing events. SummarizedExperiment new assay editing requences site (edit_freq) new colData columns number edited sites (n_sites) fraction edits (edit_idx) returned. make_plots set true save directory specified, list including SummarizedExperiment object plots number sites editied fraction editing events returned.","code":""},{"path":"https://rnabioco.github.io/raer/reference/add_editing_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds editing frequencies — add_editing_frequencies","text":"","code":"add_editing_frequencies(   se_object,   type = \"AI\",   edit_from = NULL,   edit_to = NULL,   make_plots = FALSE,   save_dir = NULL,   edit_frequency = 0.01,   min_count = 10,   ... )"},{"path":"https://rnabioco.github.io/raer/reference/add_editing_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds editing frequencies — add_editing_frequencies","text":"se_object SummarizedExperiment object created create_se type OPTIONAL type editing event add. Currently, options (\"AI\"), U C (\"UC\"), C U (\"CU\"), G (\"GA\"). \"AI\" default. want editing option outside , custom can added setting \"none\". edit_from OPTIONAL using pre-built type, can specify editing. nucleotide (, C, G, T) correspond nucleotide expect reference. Ex. editing events, \"\". type \"AI\", edit edit_to must set. edit_to OPTIONAL using pre-built type, can specify editing. nucleotide (, C, G, T) correspond nucleotide expect editing event. Ex. editing events, \"G\". type \"AI\", edit edit_to must set. make_plots OPTIONAL plots showing number frequency editing events made. Default False. True, colData columns containing treatment replicate information provided. See make_editing_plots save_dir OPTIONAL plots created saved, include path directory. plots saved \"number_of_sites.pdf\" \"editing_index.pdf\". directory provided, plots returned list SummarizedExperiment object. edit_frequency OPTIONAL edit frequency used determine number sites. Default 0.01. min_count OPTIONAL number reads used determine number edited sites. Default 10. ... Options passed make_editing_plots","code":""},{"path":"https://rnabioco.github.io/raer/reference/annot_from_gr.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a RangedSummarizedExperiment using Granges objects — annot_from_gr","title":"Annotate a RangedSummarizedExperiment using Granges objects — annot_from_gr","text":"Utility function map annotations GRanges rowRanges SummarizedExperiment. multiple features overlap concatenated comma separated values.","code":""},{"path":"https://rnabioco.github.io/raer/reference/annot_from_gr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a RangedSummarizedExperiment using Granges objects — annot_from_gr","text":"","code":"annot_from_gr(obj, gr, cols_to_map)"},{"path":"https://rnabioco.github.io/raer/reference/annot_from_gr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a RangedSummarizedExperiment using Granges objects — annot_from_gr","text":"obj RangedSummarizedExperiment gr GRanges annotations map obj cols_to_map list columns gr map obj. list names, names used colnames obj","code":""},{"path":"https://rnabioco.github.io/raer/reference/annot_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate snps — annot_snps","title":"Annotate snps — annot_snps","text":"Annotate snps","code":""},{"path":"https://rnabioco.github.io/raer/reference/annot_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate snps — annot_snps","text":"","code":"annot_snps(obj, ...)"},{"path":"https://rnabioco.github.io/raer/reference/annot_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate snps — annot_snps","text":"obj GRanges SummarizedExperiment  object dbsnp SNPlocs package, see available packages BSgenome::available.SNPs() chrom operate specified chromosome col_to_aggr column SNPlocs package add input. multiple SNPs overlap values concatenated comma separated values. drop TRUE, remove sites overlap SNPs","code":""},{"path":"https://rnabioco.github.io/raer/reference/annot_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate snps — annot_snps","text":"Either GRanges SummarizedExperiment object new column \"snp\" added information \"col_to_aggr\"","code":""},{"path":"https://rnabioco.github.io/raer/reference/bam_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in bam file as a data.frame — bam_to_df","title":"Read in bam file as a data.frame — bam_to_df","text":"Read bam file data.frame","code":""},{"path":"https://rnabioco.github.io/raer/reference/bam_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in bam file as a data.frame — bam_to_df","text":"","code":"bam_to_df(filename, region = NULL, tags = NULL)"},{"path":"https://rnabioco.github.io/raer/reference/bam_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in bam file as a data.frame — bam_to_df","text":"filename path bam file region samtools region query string (.e. chr1:100-1000) tags bam tags return, supplied type suffix, .e. \"XS:\" character, \":\" integer, \"CB:Z\" string. Bam entries missing tags return empty strings.","code":""},{"path":"https://rnabioco.github.io/raer/reference/bam_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in bam file as a data.frame — bam_to_df","text":"","code":"bam_file <- system.file(\"extdata\", \"SRR5564277_Aligned.sortedByCoord.out.md.bam\", package = \"raer\") res <- bam_to_df(bam_file) head(res) #>   chrom start end               name strand #> 1  SSR3     0 126  SRR5564277.775963      + #> 2  SSR3     0 129  SRR5564277.936490      + #> 3  SSR3     0 123 SRR5564277.1037281      + #> 4  SSR3     0 123 SRR5564277.1252641      + #> 5  SSR3     0  63 SRR5564277.2172388      + #> 6  SSR3     0 125 SRR5564277.2528847      +  res <- bam_to_df(bam_file,                  region = \"DHFR:88-100\",                  tags = c(\"NH:i\", \"AS:i\")) res #>    chrom start end               name strand NH  AS #> 1   DHFR     0 142  SRR5564277.492430      +  1 285 #> 2   DHFR     0 130  SRR5564277.535229      +  1 276 #> 3   DHFR     0 142  SRR5564277.591923      +  1 224 #> 4   DHFR     0 130 SRR5564277.1198151      +  1 238 #> 5   DHFR     0 142 SRR5564277.1574417      +  1 283 #> 6   DHFR     0 102 SRR5564277.1885362      +  1 245 #> 7   DHFR     0 113 SRR5564277.2066569      +  1 252 #> 8   DHFR     0 130 SRR5564277.2141986      +  1 271 #> 9   DHFR     0 141 SRR5564277.2294813      +  1 290 #> 10  DHFR     0 140 SRR5564277.2514222      +  1 287 #> 11  DHFR     0 129 SRR5564277.3137081      +  1 272 #> 12  DHFR     0 130 SRR5564277.3156909      +  1 267 #> 13  DHFR     0 137 SRR5564277.3331619      +  1 286 #> 14  DHFR     0 142 SRR5564277.3493582      +  1 281 #> 15  DHFR    17 115 SRR5564277.1700085      +  1 205 #> 16  DHFR    35 186  SRR5564277.802338      +  1 294 #> 17  DHFR    36 187 SRR5564277.1686385      +  1 292 #> 18  DHFR    36 187 SRR5564277.1800340      +  1 296 #> 19  DHFR    37 188 SRR5564277.2409065      +  1 300 #> 20  DHFR    42 191  SRR5564277.872889      +  4 289 #> 21  DHFR    42 191  SRR5564277.872889      +  4 289 #> 22  DHFR    42 288  SRR5564277.872889      +  4 288 #> 23  DHFR    42 288  SRR5564277.872889      +  4 288 #> 24  DHFR    54 205 SRR5564277.1614785      +  1 300 #> 25  DHFR    54 205 SRR5564277.3615925      +  1 286 #> 26  DHFR    56 207  SRR5564277.298556      +  1 290 #> 27  DHFR    57 208 SRR5564277.1690225      +  1 298 #> 28  DHFR    71 219  SRR5564277.243543      -  1 209 #> 29  DHFR    82 233  SRR5564277.294767      +  1 294 #> 30  DHFR    82 233 SRR5564277.1506211      +  1 294 #> 31  DHFR    82 233 SRR5564277.2447251      +  1 291 #> 32  DHFR    82 233 SRR5564277.2483958      +  1 210 #> 33  DHFR    82 233 SRR5564277.2648394      +  1 292 #> 34  DHFR    82 233 SRR5564277.2690581      +  1 280 #> 35  DHFR    82 233 SRR5564277.3362853      +  1 269 #> 36  DHFR    82 233 SRR5564277.3598070      +  1 295 #> 37  DHFR    82 233 SRR5564277.3645021      +  1 299 #> 38  DHFR    83 234 SRR5564277.3190114      +  1 298 #> 39  DHFR    84 235  SRR5564277.174688      +  1 298 #> 40  DHFR    84 235 SRR5564277.1078393      +  1 294 #> 41  DHFR    84 235 SRR5564277.1520524      +  1 261 #> 42  DHFR    84 235 SRR5564277.1981187      +  1 296 #> 43  DHFR    85 236 SRR5564277.3162784      +  1 277 #> 44  DHFR    86 237 SRR5564277.1512567      +  1 237 #> 45  DHFR    87 238  SRR5564277.369562      +  1 250 #> 46  DHFR    88 239  SRR5564277.419302      +  1 292 #> 47  DHFR    88 239 SRR5564277.1393129      +  1 298 #> 48  DHFR    91 242  SRR5564277.952031      +  1 284 #> 49  DHFR    91 242 SRR5564277.2999363      +  1 298 #> 50  DHFR    93 244 SRR5564277.1640147      +  1 298 #> 51  DHFR    93 244 SRR5564277.1655370      +  1 298 #> 52  DHFR    96 247 SRR5564277.2294813      -  1 290 #> 53  DHFR    98 249 SRR5564277.2066569      -  1 252 #> 54  DHFR    99 249 SRR5564277.2079905      +  1 293"},{"path":"https://rnabioco.github.io/raer/reference/build_tag_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Build index for tag sorted bam file — build_tag_index","title":"Build index for tag sorted bam file — build_tag_index","text":"Build index tag sorted bam file","code":""},{"path":"https://rnabioco.github.io/raer/reference/build_tag_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build index for tag sorted bam file — build_tag_index","text":"","code":"build_tag_index(bamfn)"},{"path":"https://rnabioco.github.io/raer/reference/build_tag_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build index for tag sorted bam file — build_tag_index","text":"bamfn CB tag sorted bamfile","code":""},{"path":"https://rnabioco.github.io/raer/reference/build_tag_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build index for tag sorted bam file — build_tag_index","text":"name index generated, bam file + \".bri\"","code":""},{"path":"https://rnabioco.github.io/raer/reference/calc_AEI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","title":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","text":"Adenosine Editing Index describes magnitude --editing sample. index weighted average editing events (G bases) observed positions. vast majority --editing occurs ALU elements human genome, regions high --editing signal compared regions coding exons. function perform pileup specified repeat regions return summary AEI metric.","code":""},{"path":"https://rnabioco.github.io/raer/reference/calc_AEI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","text":"","code":"calc_AEI(   bam_fn,   fasta_fn,   alu_ranges = NULL,   txdb = NULL,   snp_db = NULL,   BPPARAM = SerialParam() )"},{"path":"https://rnabioco.github.io/raer/reference/calc_AEI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","text":"bam_fn bam file fasta_fn fasta alu_ranges GRanges regions query calculating AEI, typically ALU repeats. txdb txdb object, supplied,  used subset alu_ranges found overlapping genes. snp_db SNP package, supplied, used exclude polymorphic positions prior calculating AEI. BPPARAM BiocParallelParam object specifying parallel options operating chromosomes.","code":""},{"path":"https://rnabioco.github.io/raer/reference/calc_AEI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","text":"named list AEI index computed allelic combinations. correctly computed signal A_G index higher alleles (T_C), likely derived noise polymorphisms.","code":""},{"path":"https://rnabioco.github.io/raer/reference/calc_AEI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","text":"Roth, S.H., Levanon, E.Y. & Eisenberg, E. Genome-wide quantification ADAR adenosine--inosine RNA editing activity. Nat Methods 16, 1131–1138 (2019). https://doi.org/10.1038/s41592-019-0610-9","code":""},{"path":"https://rnabioco.github.io/raer/reference/calc_AEI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Adenosine Editing Index (AEI) — calc_AEI","text":"","code":"bamfn <- system.file(\"extdata\", \"SRR5564277_Aligned.sortedByCoord.out.md.bam\", package = \"raer\") fafn <- system.file(\"extdata\", \"human.fasta\", package = \"raer\") calc_AEI(bamfn, fafn) #> \tworking on: SSR3 time: 2022-04-30 19:55:20 #> \tcompleted in : 0.0686225891113281 #> \tworking on: SPCS3 time: 2022-04-30 19:55:20 #> \tcompleted in : 0.0476138591766357 #> \tworking on: DHFR time: 2022-04-30 19:55:20 #> \tcompleted in : 0.0203061103820801 #> $A_C #> [1] 0 #>  #> $A_G #> [1] 1.857708 #>  #> $A_T #> [1] 0.1206758 #>  #> $C_A #> [1] 0.2475758 #>  #> $C_G #> [1] 0 #>  #> $C_T #> [1] 0.2269913 #>  #> $G_A #> [1] 0.3169277 #>  #> $G_C #> [1] 0 #>  #> $G_T #> [1] 0 #>  #> $T_A #> [1] 0 #>  #> $T_C #> [1] 0 #>  #> $T_G #> [1] 0.01332268 #>"},{"path":"https://rnabioco.github.io/raer/reference/close.BedFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a BedFile index connection — close.BedFile","title":"Close a BedFile index connection — close.BedFile","text":"Close BedFile index connection","code":""},{"path":"https://rnabioco.github.io/raer/reference/close.BedFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a BedFile index connection — close.BedFile","text":"","code":"# S3 method for BedFile close(con, ...)"},{"path":"https://rnabioco.github.io/raer/reference/close.BedFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a BedFile index connection — close.BedFile","text":"con BedFile class ... present consistency","code":""},{"path":"https://rnabioco.github.io/raer/reference/count_edits.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts edits — count_edits","title":"Counts edits — count_edits","text":"Counts edits per sample add new colData columns number edited sites (n_sites)  fraction edits (edit_idx). function called add_editing_frequencies meant used directly.","code":""},{"path":"https://rnabioco.github.io/raer/reference/count_edits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts edits — count_edits","text":"","code":"count_edits(   se_filtered,   edit_frequency = 0.01,   min_count = 10,   edit_from = NULL,   edit_to = NULL )"},{"path":"https://rnabioco.github.io/raer/reference/count_edits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts edits — count_edits","text":"se_filtered SummarizedExperiment object created create_se processed add_editing_frequencies edit_frequency OPTIONAL edit frequency used determine number sites. Default 0.01. min_count OPTIONAL number reads used determine number edited sites. Default 10. edit_from OPTIONAL using pre-built type, can specify editing. nucleotide (, C, G, T) correspond nucleotide expect reference. Ex. editing events, \"\". type \"AI\", edit edit_to must set. edit_to OPTIONAL using pre-built type, can specify editing. nucleotide (, C, G, T) correspond nucleotide expect editing event. Ex. editing events, \"G\". type \"AI\", edit edit_to must set.","code":""},{"path":"https://rnabioco.github.io/raer/reference/create_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Create RangedSummarizedExperiment — create_se","title":"Create RangedSummarizedExperiment — create_se","text":"function take either single result running pileup_res list results (ie different samples) running pileup_res return summarized experiment object contains assays column pileup_res output. Currently add sample info can take list results. Potential added functionality allow user give existing SE object input give sample meta data.","code":""},{"path":"https://rnabioco.github.io/raer/reference/create_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create RangedSummarizedExperiment — create_se","text":"","code":"create_se(pileup_res, sample_names = NULL)"},{"path":"https://rnabioco.github.io/raer/reference/create_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create RangedSummarizedExperiment — create_se","text":"pileup_res results running get_pileup.R, can one result, list results, named list results. named list give, colData named using names list. sample_names OPTIONAL list names added SE object. sample names given pileup_res named list, default names (ie sample_1, sample_2, ..., sample_n) given warning printed.","code":""},{"path":"https://rnabioco.github.io/raer/reference/get_cell_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a bam file to contain only certain cell barcodes — get_cell_bam","title":"Subset a bam file to contain only certain cell barcodes — get_cell_bam","text":"Subset bam file contain certain cell barcodes","code":""},{"path":"https://rnabioco.github.io/raer/reference/get_cell_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a bam file to contain only certain cell barcodes — get_cell_bam","text":"","code":"get_cell_bam(inbam, barcodes, outbam = NULL)"},{"path":"https://rnabioco.github.io/raer/reference/get_cell_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a bam file to contain only certain cell barcodes — get_cell_bam","text":"inbam input tag indexed bam file barcodes character vector tag values extract outbam optional output bam file name","code":""},{"path":"https://rnabioco.github.io/raer/reference/get_cell_bam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a bam file to contain only certain cell barcodes — get_cell_bam","text":"Returns name output bam file","code":""},{"path":"https://rnabioco.github.io/raer/reference/get_pileup.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate base counts using pileup — get_pileup","title":"Generate base counts using pileup — get_pileup","text":"Generate base counts using pileup","code":""},{"path":"https://rnabioco.github.io/raer/reference/get_pileup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate base counts using pileup — get_pileup","text":"","code":"get_pileup(   bamfile,   fafile,   bedfile = NULL,   region = NULL,   chrom = NULL,   start = NULL,   end = NULL,   min_reads = c(1L),   min_base_qual = 20L,   min_mapq = c(0L),   max_depth = 10000,   library_type = \"fr-first-strand\",   outfile = NULL,   bedidx = NULL,   bam_flags = NULL,   n_align = 0,   n_align_tag = \"NH\",   event_filters = c(0, 0, 0, 0, 0, 0, 0),   only_keep_variants = FALSE,   reads = NULL,   return_data = TRUE )"},{"path":"https://rnabioco.github.io/raer/reference/get_pileup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate base counts using pileup — get_pileup","text":"bamfile paths 1 2 bam files, pass 2 files fafile path fasta file bedfile path bed file sites regions query region samtools region query string (.e. chr1:100-1000) chrom chrom process, used region start start position, used region end end position, used region min_reads min read depth needed report site min_base_qual min base quality score consider read pileup min_mapq minimum required MAPQ score max_depth maximum read depth considered site library_type read orientation, one fr-first-strand, fr-second-strand, unstranded. outfile output tabix indexed file? bedidx BedFile object, supplied, pileup use index generated indexBed() bam_flags bam flags filter keep, use Rsamtools::scanBamFlag() set n_align number valid alignments use read, based tag value supplied n_align_tag. NULL disables filtering n_align_tag value n_align_tag Tag name containing # valid alignments event_filters integer vector length 4 values indicating distance pileup position features filter. Distance trim 5' ends reads, 3' end reads, distance splicing events, distance indels, length homopolymer stretch used determine site homopolymer. number read mismatch types (e.g. ->G G->T) allowed single read, required # mismatches activate mismatch type filter. default filters applied (e.g. c(0,0,0,0,0,0,0)). only_keep_variants TRUE, variant sites reported (FALSE default) reads supplied fasta file written reads pass filters contain variants return_data return data Granges table?","code":""},{"path":"https://rnabioco.github.io/raer/reference/get_pileup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate base counts using pileup — get_pileup","text":"compare RNA-seq DNA-seq 2 bam files can supplied bamfile argument, first corresponding RNA-seq second DNA-seq. min_reads min_mapq arguments can accept 2 values (numeric vector) corresponding filters RNA DNA-seq respectively. min_base_qual, n_align, n_align_tag, event_filters params applied files. library type argument apply 1st bam file. second set \"unstranded\"","code":""},{"path":"https://rnabioco.github.io/raer/reference/indexBed-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a samtools style index for a BedFile — indexBed,character-method","title":"Generate a samtools style index for a BedFile — indexBed,character-method","text":"Generate samtools style index BedFile","code":""},{"path":"https://rnabioco.github.io/raer/reference/indexBed-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a samtools style index for a BedFile — indexBed,character-method","text":"","code":"# S4 method for character indexBed(file)"},{"path":"https://rnabioco.github.io/raer/reference/indexBed-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a samtools style index for a BedFile — indexBed,character-method","text":"file path bed file","code":""},{"path":"https://rnabioco.github.io/raer/reference/indexBed-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a samtools style index for a BedFile — indexBed,character-method","text":"Return object class BedFile contains pointer bed file index.","code":""},{"path":"https://rnabioco.github.io/raer/reference/indexBed.html","id":null,"dir":"Reference","previous_headings":"","what":"Index Bed — indexBed","title":"Index Bed — indexBed","text":"Index Bed","code":""},{"path":"https://rnabioco.github.io/raer/reference/indexBed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index Bed — indexBed","text":"","code":"indexBed(file, ...)"},{"path":"https://rnabioco.github.io/raer/reference/make_editing_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes summary plots of editing — make_editing_plots","title":"Makes summary plots of editing — make_editing_plots","text":"Generates plots number sites edited per sample percent editing events per sample. function written called directly add_editing_frequencies","code":""},{"path":"https://rnabioco.github.io/raer/reference/make_editing_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes summary plots of editing — make_editing_plots","text":"","code":"make_editing_plots(   se_object,   colors = NULL,   meta_col = \"genotype_treatment\",   replicate = \"rep\" )"},{"path":"https://rnabioco.github.io/raer/reference/make_editing_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes summary plots of editing — make_editing_plots","text":"se_object SummarizedExperiment object created create_se colors OPTIONAL colors replicates. colors provided, Set1 `RColorBrewer used meta_col column colData used separate samples based condition. example, \"genotype\", \"treatment\", \"genotype_treatment.\" Default \"genotype_treatment.\" replicate column colData contining information replicates. Default \"rep\".","code":""},{"path":"https://rnabioco.github.io/raer/reference/perform_de.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform differential editing\nUses either edgeR or DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own. — perform_de","title":"Perform differential editing\nUses either edgeR or DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own. — perform_de","text":"moment, function find editing events specific treatment, pretty straight forward add possible return values.","code":""},{"path":"https://rnabioco.github.io/raer/reference/perform_de.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform differential editing\nUses either edgeR or DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own. — perform_de","text":"","code":"perform_de(   deobj,   type = \"edgeR\",   sample_col = \"sample\",   condition_col = \"condition\",   condition_control = NULL,   condition_treatment = NULL )"},{"path":"https://rnabioco.github.io/raer/reference/perform_de.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform differential editing\nUses either edgeR or DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own. — perform_de","text":"deobj SummarizedExperiment object prepared de prep_for_de type OPTIONAL edgeR DESeq run. Default edgeR sample_col OPTIONAL name column colData(deobj) contains sample information. Default sample. column named \"sample\", must provide appropriate sample column condition_col OPTIONAL name column colData(deobj) contains treatment information. Default condition, column named \"condition\", must provide appropriate condition column condition_control name control condition. must variable condition_col colData(deobj). default provided. condition_treatment name treatment condition. must variable condition_col colData(deobj).","code":""},{"path":"https://rnabioco.github.io/raer/reference/prep_for_de.html","id":null,"dir":"Reference","previous_headings":"","what":"Make summarized experiment object for DE\nGenerates a SummarizedExperiment object for use with edgeR or DESeq2\nwill generate a counts assay with a matrix formated with 2 columns per sample — prep_for_de","title":"Make summarized experiment object for DE\nGenerates a SummarizedExperiment object for use with edgeR or DESeq2\nwill generate a counts assay with a matrix formated with 2 columns per sample — prep_for_de","text":"Make summarized experiment object DE Generates SummarizedExperiment object use edgeR DESeq2 generate counts assay matrix formated 2 columns per sample","code":""},{"path":"https://rnabioco.github.io/raer/reference/prep_for_de.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make summarized experiment object for DE\nGenerates a SummarizedExperiment object for use with edgeR or DESeq2\nwill generate a counts assay with a matrix formated with 2 columns per sample — prep_for_de","text":"","code":"prep_for_de(   se,   type = \"AI\",   edit_from = NULL,   edit_to = NULL,   min_prop = 0.1,   max_prop = 0.9,   min_samples = 3 )"},{"path":"https://rnabioco.github.io/raer/reference/prep_for_de.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make summarized experiment object for DE\nGenerates a SummarizedExperiment object for use with edgeR or DESeq2\nwill generate a counts assay with a matrix formated with 2 columns per sample — prep_for_de","text":"se SummarizedExperiment object type OPTIONAL type editing event add. Currently, supported (\"AI\") default, custom can added setting \"none\". edit_from OPTIONAL using pre-built type, can specify editing. nucleotide (, C, G, T) correspond nucleotide expect reference. Ex. editing events, \"\". type \"AI\", edit edit_to must set. edit_to OPTIONAL using pre-built type, can specify editing. nucleotide (, C, G, T) correspond nucleotide expect editing event. Ex. editing events, \"G\". type \"AI\", edit edit_to must set. min_prop OPTIONAL min proporation reads edited site. least min_samples need pass keep site. Default 0.1. max_prop OPTIONAL max proporation reads edited site. least min_samples need pass keep site. Default 0.9. min_samples OPTIONAL minimum number samples passing cutoffs keep site. Default 3.","code":""},{"path":"https://rnabioco.github.io/raer/reference/raer.html","id":null,"dir":"Reference","previous_headings":"","what":"raer: RNA editing tools in R — raer","title":"raer: RNA editing tools in R — raer","text":"Toolkit identification, visualization, statistical testing RNA editing signals within R.","code":""},{"path":[]},{"path":"https://rnabioco.github.io/raer/reference/raer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"raer: RNA editing tools in R — raer","text":"Maintainer: Kent Riemondy kent.riemondy@gmail.com (ORCID) Authors: Kristen Wells kristen.wells-wrasman@cuanschutz.edu (ORCID) Ryan Sheridan ryan.sheridan@cuanschutz.edu contributors: RNA Bioscience Initiative [funder]","code":""},{"path":"https://rnabioco.github.io/raer/reference/read_pileup.html","id":null,"dir":"Reference","previous_headings":"","what":"Read pileup, indexed by tabix — read_pileup","title":"Read pileup, indexed by tabix — read_pileup","text":"Read pileup, indexed tabix","code":""},{"path":"https://rnabioco.github.io/raer/reference/read_pileup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read pileup, indexed by tabix — read_pileup","text":"","code":"read_pileup(tbx_fn, region = NULL)"},{"path":"https://rnabioco.github.io/raer/reference/read_pileup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read pileup, indexed by tabix — read_pileup","text":"tbx_fn filename region region read file, samtools style region specifiers supported.","code":""},{"path":"https://rnabioco.github.io/raer/reference/run_deseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform differential editing with DESeq2\nUses DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_deseq2","title":"Perform differential editing with DESeq2\nUses DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_deseq2","text":"moment, function find editing events specific treatment, pretty straight forward add possible return values.","code":""},{"path":"https://rnabioco.github.io/raer/reference/run_deseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform differential editing with DESeq2\nUses DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_deseq2","text":"","code":"run_deseq2(deobj, condition_control = NULL, condition_treatment = NULL)"},{"path":"https://rnabioco.github.io/raer/reference/run_deseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform differential editing with DESeq2\nUses DESeq2 to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_deseq2","text":"deobj SummarizedExperiment object prepared de prep_for_de condition_control name control condition. must variable condition_col colData(deobj). default provided. condition_treatment name treatment condition. must variable condition_col colData(deobj).","code":""},{"path":"https://rnabioco.github.io/raer/reference/run_edger.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform differential editing with edgeR\nUses edgeR to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_edger","title":"Perform differential editing with edgeR\nUses edgeR to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_edger","text":"moment, function find editing events specific treatment, pretty straight forward add possible return values.","code":""},{"path":"https://rnabioco.github.io/raer/reference/run_edger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform differential editing with edgeR\nUses edgeR to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_edger","text":"","code":"run_edger(deobj, condition_control = NULL, condition_treatment = NULL)"},{"path":"https://rnabioco.github.io/raer/reference/run_edger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform differential editing with edgeR\nUses edgeR to perform differential editing analysis.\nThis will work for simple designs that have 1 treatment and 1 control.\nFor more complex designs, we suggest you perform your own.\nIt will test if your sample column makes the model matrix not full\nrank. If that happens, the model matrix will be modified to be full rank.\nThis is not intended to be called directly by the user, instead, this should\nbe called by perform_de — run_edger","text":"deobj SummarizedExperiment object prepared de prep_for_de condition_control name control condition. must variable condition_col colData(deobj). default provided. condition_treatment name treatment condition. must variable condition_col colData(deobj).","code":""}]
