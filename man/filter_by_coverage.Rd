% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sc-utils.R
\name{filter_by_coverage}
\alias{filter_by_coverage}
\title{Filter sites by read coverage}
\usage{
filter_by_coverage(bamfile, gr, min_counts, param = NULL, verbose = FALSE, ...)
}
\arguments{
\item{bamfile}{BAM file name}

\item{gr}{\code{GenomicRanges::GRanges} or BED file name}

\item{min_counts}{minimum reads counts to require}

\item{param}{\code{Rsamtools::ScanBamParam} specifying how reads should be filtered.
If not supplied, the filter will ignore alignments marked as
secondary, supplementary, or QC-fail.}

\item{verbose}{Print messages if \code{TRUE}.}

\item{...}{Additional arguments to supply to \code{\link[GenomicAlignments:coverage-methods]{GenomicAlignments::coverage()}}}
}
\description{
Compute read coverage at sites listed in a \code{GRanges} or BED file
and return sites with at least \code{min_counts} read depth. Computes coverage
across all alignments and positions, ignoring any cell barcodes. Generally
it is faster to compute coverage across all positions than to filter those
in the GRanges object, rather than only querying the supplied sites.
}
\examples{
library(rtracklayer)
bam_fn <- raer_example("SRR5564269_Aligned.sortedByCoord.out.md.bam")
sites <- GRanges(
  rep("SSR3", 101),
  IRanges(100:200, width = 1)
)

filter_by_coverage(bam_fn, sites, min_counts = 24)

}
\concept{filter}
